# Python Django
# Test a Django project on multiple versions of Python.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
  #azureServiceConnectionId: 'cfc84f43-297c-4e92-ad0f-ae7b522f30f9'

  # Agent VM image name
  vmImageName: 'ubuntu-18.04'
  projectRoot: $(System.DefaultWorkingDirectory)
  #functionAppName: 'backend-instance'

  # Python version: 2.7
  pythonVersion: '2.7'

stages:
- stage: Build
  displayName: Build chat-app
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        pip3 install setuptools
        pip3 install --upgrade pip
        pip3 install virtualenv
        virtualenv venv
        source venv/bin/activate
        pip3 install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Chat-app'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: 
      name: Server
      resourceType: virtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: 'Bash@3'
            inputs:
              targetType: 'inline'
              script: | 
                # Modify deployment script based on the app type
                echo "Starting deployment script run"
                cd '/home/Pasha/azagent/_work/1/drop/' && unzip -o $(Build.BuildId).zip -d /home/Pasha/myproject 
                rm -rf *.zip
                source /home/Pasha/myproject/venv/bin/activate
                cd '/home/Pasha/myproject/' && pip3 install -r requirements.txt
                cd '/home/Pasha/myproject/fundoo' && python3 manage.py migrate
                sudo systemctl daemon-reload
                sudo systemctl start gunicorn